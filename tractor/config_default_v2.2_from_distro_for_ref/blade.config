{
    #
    # Configuration profiles for tractor-blade servers
    #
    # On startup, tractor-blade.py on each server requests the contents
    # of this file from the central tractor-engine.  The blade then scans
    # the BladeProfiles LIST below looking for a "Hosts" clause that matches
    # its hostname/platform. The ordering of the list below is important,
    # the FIRST profile that matches is used, and searching ends. Thus,
    # host-specific profiles should typically precede generic ones.
    #
    # Profiles entries in the BladeProfiles list are first initialized
    # from the "ProfileDefaults" entry, if it exists, and then their
    # specific elements are applied as overrides.
    #

    "ProfileDefaults":
    {   "ProfileName": "default",
        "Hosts": {"Platform": "*"},
        "Access": {
            "Crews": ["*"],
            "NimbyCrews": ["*"],
            "NimbyConnectPolicy": 1.5
        },
        "NIMBY": 0,
        "Provides": ["PixarRender", "PixarNRM",
                     "RfMRender", "RfMRibGen", "PixarMTOR"],
        "Capacity": {
            "MaxSlots": 1,    # 0 -> use number of system CPUs
            "MaxLoad":  1.5,  # CPU load avg, normalized by cpu count
            "MinRAM":   0.5,  # gigabytes
            "MinDisk":  1.0,  # gigabytes; alternatively: [1.0, "D:/"]
        },
        "UDI": 1.0,

        #"CmdOutputLogging": "logfile=/fileserver/tractor-logs/%u/J%j/T%t.log",
        #"CmdOutputLogging": "logserver=tractor-logger:9180",
        "CmdOutputLogging": "logserver=${TRACTOR_ENGINE}:9180",

        # 5 errs within 30 secs causes 120 second hiatus in requests for work,
        # or use -1 for the third parameter to cause an auto-nimby instead.
        # In the nimby variant, regular processing must then be restored later
        # by an administrator using a manual nimby reset via the Dashboard or tq.
        # Use -1 for the first parameter to disable this feature.
        "RecentErrorThrottle": [5, 30, 120],

        # Control whether scripts that emit "TR_EXIT_STATUS nnn" directives
        # are left to eventually exit on their own with the given exit status
        # code override, or should they be actively killed by tractor-blade
        # if they don't exit promptly. Use 0 (zero) to wait, or 1 (one) to
        # actively kill them.
        "TR_EXIT_STATUS_terminate": 0,

        # When TaskBidTuning is set to "immediate" the blade will ask for
        # new work immediately upon prior task (successful) exit, or when
        # a successful new launch has occurred and additional slot capacity
        # is still available.  Otherwise it will wait more conservatively
        # (minsleep) between requests. The immediate mode will cause blades
        # to cycle through a lot of fast running commands very quickly.
        # "TaskBidTuning": "immediate",

        # A profile can match specific hosts based on several criteria in
        # the "Hosts" clause, these can include the count and type of GPU.
        # Some hosts contain "uninteresting" virtual or underpowered GPUs
        # that should always be excluded from consideration, PRIOR to the
        # profile matching pass.  Use the "GPUExclusionPatterns" list here
        # to enumerate the makes/models of GPUs to be skipped in counts and
        # matches. Note that "GPUExclusionPatterns" is restricted to the
        # ProfileDefaults block only (here), it is ignored inside individual
        # profile definitions since GPU counting occurs prior to matching.
        # Each item in the list is a simple "glob-style" wildcard pattern,
        # and patterns without '*' or '?' will be treated as "*TEXT*".
        # "GPUExclusionPatterns": ["QXL", "Standard VGA"],

        # "DirMapZone": "nfs", # typically blades auto-select "nfs" or "unc"

        #"VersionPin": "@env(TRACTOR_ENGINE_VERSION)",

        "SiteModulesPath": "",

        "EnvKeys": [
            {   "keys": ["default"],
                "environment": {},
                "envhandler": "default"
            },
        ]
    },


    "BladeProfiles":
    [
        # These profiles are examples showing how to apply
        # potentially different settings to different platforms.
        # You can add more, or reduce it down to just one generic
        # profile if you prefer. The "Platform" strings are
        # compared against the python "platform.platform()"
        # values on the blades.

        {   "ProfileName": "Linux64",
            "Hosts": {"Platform": "Linux-*64bit*"},
            "EnvKeys": [ "@merge('shared.linux.envkeys')" ]
        },
        {   "ProfileName": "Linux32",
            "Hosts": {"Platform": "Linux-*"},
            "EnvKeys": [ "@merge('shared.linux.envkeys')" ]
        },


        {   "ProfileName": "Windows10",
            "Hosts": {"Platform": "Windows-10*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "Windows8.1",
            "Hosts": {"Platform": "Windows-*-6.3.*-64*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "Windows8",
            "Hosts": {"Platform": "Windows-*-6.2.*-64*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "Windows7",
            "Hosts": {"Platform": "Windows-*-6.1*-64*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "Windows7_32bit",
            "Hosts": {"Platform": "Windows-*-6.1*-32*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "WindowsVista64",
            "Hosts": {"Platform": "Windows-*-6.0*-64*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "WindowsVista32",
            "Hosts": {"Platform": "Windows-*-6.0*-32*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "WindowsXP",
            "Hosts": {"Platform": "Windows-*-5.1*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },
        {   "ProfileName": "Windows",
            "Notes": "fallback for any other windows release",
            "Hosts": {"Platform": "Windows*"},
            "EnvKeys": [ "@merge('shared.windows.envkeys')" ]
        },


        {   "ProfileName": "MacOSX",
            "Hosts": {"Platform": "Darwin-*"},
            "EnvKeys": [ "@merge('shared.macosx.envkeys')" ]
        }

    ]
}


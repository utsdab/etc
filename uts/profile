#!/bin/bash
echo ""
echo "STARTING: ${BASH_SOURCE}"
echo "VERSION: 2017-05-29"
echo "USER: ${USER}"
export PATH="/usr/X11R6/bin:${PATH}"

########################## SETUP STUDIO WIDE ENVIRONMENT HOOKS
if [ -d ${DABRENDER} ]; then
    echo "CHECK   : DABRENDER SEEMS TO BE THERE ${DABRENDER}"
else
    echo "CRITICAL: Cant see DABRENDER ${DEBRENDER}"
    unset DABRENDER
fi

##########################  DEV or PRODUCTION
if [ ${DABDEV} ]; then
    echo ">>>>>>>>> DEVELOPMENT: Using the development paths"
    _dabusr="${DABDEV}/usr"
    _dabetc="${DABDEV}/etc"
    _dabsww="${DABDEV}/sww"
    _dabwork="${DABRENDER}/work"
    _dabassets="${DABRENDER}/assets"
    _dabuserprefs="${_dabwork}/user_prefs"
else
    echo "PRODUCTION: Using the studio paths"
    _dabusr="${DABRENDER}/usr"
    _dabetc="${DABRENDER}/etc"
    _dabsww="${DABRENDER}/sww"
    _dabwork="${DABRENDER}/work"
    _dabassets="${DABRENDER}/assets"
    _dabuserprefs="${DABRENDER}/work/user_prefs"
fi

######### DABUSR - plugins and scripts and tool extension
if [ -d ${_dabusr} ]; then
    export DABUSR="${_dabusr}"
    echo "INFO    : DABUSR = ${DABUSR}"
else
    echo "CRITICAL: Cant set DABUSR correctly ${_dabusr}"
    unset DABUSR
fi

######### DABETC - configurations and licenses
if [ -d ${_dabetc} ]; then
    export DABETC="${_dabetc}"
    echo "INFO    : DABETC = ${DABETC}"
else
    echo "CRITICAL: Cant set DABETC correctly ${_dabetc}"
    unset DABETC
fi

######## DABSWW - software developed as glue
if [ -d ${_dabsww} ]; then
    export DABSWW="${_dabsww}"
    echo "INFO    : DABSWW = ${DABSWW}"
else
    echo "CRITICAL: Cant set DABSWW correctly ${_dabsww}"
    unset DABSWW
fi

######### DABWORK - the main work area hook
if [ -d ${_dabwork} ]; then
    export DABWORK="${_dabwork}"
    echo "INFO    : DABWORK = ${DABWORK}"
else
    echo "CRITICAL: Cant set DABWORK correctly ${_dabwork}"
    unset DABWORK
fi

######### DABASSETS - an asset library hook
if [ -d ${_dabassets} ]; then
    export DABASSETS="${_dabassets}"
    echo "INFO    : DABASSETS = ${DABASSETS}"
else
    echo "CRITICAL: Cant set DABASSETS correctly ${_dabassets}"
    unset DABASSETS
fi

######### DABUSERPREFS  this is a place for user preferences to be centrally (in lieu of a home directory)
if [ -d ${_dabuserprefs} ]; then
    export DABUSERPREFS="${_dabuserprefs}"
    echo "INFO    : DABUSERPREFS = ${DABUSERPREFS}"
else
    echo "CRITICAL: Cant set DABUSERPREFS correctly ${_dabuserprefs}"
    unset DABUSERPREFS
fi

######### MAYA_APP_DIR  this is a place for user preferences to be centrally (in lieu of a home directory)
# config is normally a link to the current CONFIG_vXX with mayaprefs inside
_MAYA_APP_DIR="${DABUSERPREFS}/${USER}/config/mayaprefs"
if [ -d ${_MAYA_APP_DIR} ]; then
    export MAYA_APP_DIR="${_MAYA_APP_DIR}"
    echo "INFO    : MAYA_APP_DIR = ${MAYA_APP_DIR}"
else
    echo "WARNING: Cant set MAYA_APP_DIR correctly as ${_MAYA_APP_DIR}"
    unset MAYA_APP_DIR
fi

##########################
export MAYA_VERSION="2017"
echo "INFO    : MAYA VERSION   : $MAYA_VERSION"
export RMAN_VERSION="21.5"
echo "INFO    : RMAN_VERSION   : $RMAN_VERSION"
export TRACTOR_VERSION="2.2"
echo "INFO    : TRACTOR_VERSION: $TRACTOR_VERSION"
export NUKE_VERSION="10.5v4"
echo "INFO    : NUKE_VERSION   : $NUKE_VERSION"
echo "INFO    : OS             : ${OSTYPE:0:5}"
##########################

case ${OSTYPE:0:5} in
linux)
    export RMANTREE="/opt/pixar/RenderManProServer-${RMAN_VERSION}"
    export RMSTREE="/opt/pixar/RenderManStudio-${RMAN_VERSION}-maya${MAYA_VERSION}"
    export TRACTOR_LOCATION="/opt/pixar/Tractor-${TRACTOR_VERSION}"
    export ARNOLD_LOCATION="/opt/solidangle/mtoa/${MAYA_VERSION}"
    export MAYA_APPLICATION_LOCATION="/usr/autodesk/maya${MAYA_VERSION}"
    export MAYA_LOCATION="${MAYA_APPLICATION_LOCATION}"
    export NUKE_INSTALL_PATH="/opt/foundry/${NUKE_VERSION}"
    export NUKE_LOCATION="/opt/foundry/${NUKE_VERSION}"
    ;;
darwi)
    export RMANTREE="/Applications/Pixar/RenderManProServer-${RMAN_VERSION}"
    export RMSTREE="/Applications/Pixar/RenderManForMaya-${RMAN_VERSION}-maya${MAYA_VERSION}"
    export TRACTOR_LOCATION="/Applications/Pixar/Tractor-${TRACTOR_VERSION}"
    export ARNOLD_LOCATION="/Applications/solidangle/mtoa/${MAYA_VERSION}"
    export MAYA_APPLICATION_LOCATION="/Applications/Autodesk/maya${MAYA_VERSION}"
    export MAYA_LOCATION="${MAYA_APPLICATION_LOCATION}/Maya.app/Contents"
    export MAYA_RENDER_DESC_PATH="${ARNOLD_LOCATION}/arnoldRenderer.xml:${MAYA_RENDER_DESC_PATH}"
    export NUKE_INSTALL_PATH="/Applications/Nuke${NUKE_VERSION}"
    export NUKE_LOCATION="${NUKE_INSTALL_PATH}/Nuke${NUKE_VERSION}.app"
    export NUKE_TEMP_DIR="/var/tmp/nuke-${USER}"
    export PATH="${NUKE_LOCATION}/Contents/MacOS:${PATH}"
    export PATH="/usr/aw/COM/bin:/usr/aw/COM/etc:${PATH}"
    export PATH="/Applications/RV64.app/Contents/MacOS:${PATH}"
    ;;
*)
    echo "WARNING:   LIBRARY_PATH and base environment NOT set in profile.d/dabanim.sh"
    ;;
esac

#  DABRENDER is set in /etc/profile.d/dabanim.sh and is OS aware
#  Not entirely sure what the difference between RDIR and RMS_SCRIPT_PATHS is

export RMS_SCRIPT_PATHS="${DABETC}/pixar/config"
export RDIR="${DABETC}/pixar/config"     ####  appeard to be obsolete
#export PIXAR_LICENSE_FILE="${DABETC}/pixar/pixar.license"
export foundry_LICENSE="${DABETC}/foundry/foundry_license.lic"
export RV_LICENSE_FILE="${DABETC}/tweak/license.gto"
export TWEAK_LICENSE_FILE="${DABETC}/tweak/license.gto"
export MU_MODULE_PATH="${DABUSR}/etc/tweak/mu"
export SGTK_DESKTOP_CONFIG_LOCATION="${DABWORK}/shotgun/toolkit_configs"
export SGTK_PREFERENCES_LOCATION="${DABWORK}/shotgun/toolkit_configs"
export SHOTGUN_BUNDLE_CACHE_FALLBACK_PATHS="${DABWORK}/shotgun/toolkit_configs"
export SHOTGUN_PATH_MAC="${DABWORK}/shotgun/shotgun_projects"
#export solidangle_LICENSE="${DABETC}/solidangle/solidangle_license.lic"

export ARNOLD_PLUGIN_PATH="${ARNOLD_LOCATION}/shaders"
export MTOA_TEMPLATES_PATH="" # is for the Attribute Editor (AE) templates of Arnold shaders.
export MTOA_EXTENSIONS_PATH="" # is for MtoA extensions like Yeti.
export MAYA_CUSTOM_TEMPLATE_PATH= "" # is for Node Editor templates for Arnold shaders.
export MTOA_STARTUP_LOG_VERBOSITY=""  # sets the MtoA log verbosity during startup: 1 for Errors and Warnings, 2 for Errors, Warnings, and Info, 3 for all
export MTOA_LOG_PATH="" # default location for Arnold log files.

##########################  PATH settings
export PATH="${DABUSR}/bin:${PATH}"
export PATH="${DABUSR}/etc/tractor:${PATH}"
export PATH="${DABSWW}/renderfarm/bin:${PATH}"
export PATH="${RMANTREE}/bin:${PATH}"
export PATH="${RMSTREE}/bin:${PATH}"
export PATH="${TRACTOR_LOCATION}/bin:${PATH}"
export PATH="${MAYA_LOCATION}/bin:${PATH}"
export PATH="${ARNOLD_LOCATION}/bin:${PATH}"

##########################  PYTHONPATH settings
export PYTHONPATH="${MAYA_LOCATION}/Frameworks/Python.framework/Versions/Current/lib/python2.7/site-packages:${PYTHONPATH}"
export PYTHONPATH="${TRACTOR_LOCATION}/lib/python2.7/site-packages:${PYTHONPATH}"
export PYTHONPATH="${RMSTREE}/scripts:${PYTHONPATH}"
export PYTHONPATH="${RMANTREE}/bin:${PYTHONPATH}"

#export PYTHONPATH="${DABRENDER}:${DABSWW}:${PYTHONPATH}"  - danger here - need to get "maya" out of SWW
#export PYTHONPATH="${DABSWW}/renderfarm:${PYTHONPATH}"

#export PYTHONPATH="${DABRENDER}:${PYTHONPATH}"
export PYTHONPATH="${DABSWW}:${PYTHONPATH}"
export PYTHONPATH="${DABUSR}/etc/tractor:${PYTHONPATH}"
export PYTHONPATH="${DABUSR}/etc/maya/dab_scripts:${PYTHONPATH}"
export PYTHONPATH="${DABUSR}/etc/maya/dab_plug-ins:${PYTHONPATH}"

##########################  NUKE settings
#export NUKE_PATH="${OCIO_EXECROOT}/lib/nuke:${NUKE_PATH}"
#export NUKE_PATH="${OCIO_ROOT}/share/nuke:${NUKE_PATH}";
#export NUKE_PATH="${DABUSR}/etc/nuke/tractorNuke:${NUKE_PATH}";

##########################  MAYA and RENDERMAN settings  also in the Maya.env
export MAYA_PLUG_IN_PATH="${DABUSR}/etc/maya/dab_plug-ins:${MAYA_PLUG_IN_PATH}"
export MAYA_PLUG_IN_PATH="${RMSTREE}/plug-ins:${MAYA_PLUG_IN_PATH}"
export MAYA_PLUG_IN_PATH="${MAYA_APPLICATION_LOCATION}/plug-ins:${MAYA_PLUG_IN_PATH}"

export MAYA_SCRIPT_PATH="${DABUSR}/etc/maya/dab_scripts:${MAYA_SCRIPT_PATH}"
export MAYA_SCRIPT_PATH="${RMSTREE}/scripts:${MAYA_SCRIPT_PATH}"

export XBMLANGPATH="${DABUSR}/maya/dab_icons/%B${XBMLANGPATH}"
export XBMLANGPATH="$RMSTREE/icons/%B:${XBMLANGPATH}"

export MAYA_PRESET_PATH="${DABUSR}/etc/maya/dab_presets"
export RMAN_ASSET_LIBRARY="${DABASSETS}/RenderManAssetLibrary"
export MAYA_MODULE_PATH="${DABUSR}/etc/maya/dab_modules"
export MAYA_SHELF_PATH="${DABUSR}/etc/maya/dab_shelves"

export MAYA_MAC_SET_UMASK=0
export MAYA_DISABLE_CIP=1

###########################  ALIAS's
alias nukex='Nuke${NUKE_VERSION} --nukex'
alias nukestudio='Nuke${NUKE_VERSION} --studio'
alias nuke='Nuke${NUKE_VERSION}'
alias maya='maya'
alias tqd='tq --engine tractor-engine:5600'
alias myprefs='open `myprefs.py`'
alias mywork='open `mywork.py`'


##########################
echo "ENDING  : ${BASH_SOURCE}"
echo ""

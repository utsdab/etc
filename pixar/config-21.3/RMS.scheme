# 
# The factory-default RAT.scheme  $Revision: #1 $
#
#   Controls common look and feel settings.
#
array set pf [GetPlatform]

if {$pf(platform) == "windows"} {
    # windows-specific settings
    Option define SystemScrollBars SystemScrollBars; #Scrollbar color 
    Option define SystemDesktop SystemDesktop; #Desktop color 
    Option define SystemActiveTitleBar SystemActiveTitleBar; #Color of the title bar for the active window 
    Option define SystemInactiveTitleBar SystemInactiveTitleBar; #Color of the title bar for the inactive window 
    Option define SystemMenuBar	SystemMenuBar; #Menu background color 
    Option define SystemWindowBackground SystemWindowBackground; #Window background color 
    Option define SystemWindowFrame SystemWindowFrame; #Window frame color 
    Option define SystemMenuText SystemMenuText; #Color of text on menus 
    Option define SystemWindowText SystemWindowText; #Color of text in windows 
    Option define SystemTitleBarTex SystemTitleBarText; #Color of text in caption, size box, and scroll arrow 
    Option define SystemActiveBorder SystemActiveBorder; #Border color of active window 
    Option define SystemInactiveBorder SystemInactiveBorder; #Border color of inactive window 
    Option define SystemApplicationWorkspace SystemApplicationWorkspace; #Background color of multiple document interface (MDI) applications 
    Option define SystemHighlight SystemHighlightBackground; #color of items selected in a control 
    Option define SystemHighlightBackground SystemButtonFace
    Option define SystemHighlightText SystemHighlightText; #Text color of items selected in a control 
    Option define SystemButtonFace SystemButtonFace; #Color of shading on the face of command buttons 
    Option define SystemButtonShadow SystemButtonShadow; #Color of shading on the edge of command buttons 
    Option define SystemGrayText SystemGrayText; #Grayed (disabled) text 
    Option define SystemButtonText SystemButtonText; #Text color on push buttons 
    Option define SystemInactiveCaptionText SystemInactiveCaptionText; #Color of text in an inactive caption 
    Option define System3DHighlight System3DHighlightHighlight; #color for 3-D display elements 
    Option define System3DDKShadow System3DDKShadow; #Darkest shadow color for 3-D display elements 
    Option define System3DLight System3DLightSecond; #lightest 3-D color after vb3DHighlight 
    Option define SystemInfoText SystemInfoTextColor; #of text in ToolTips 
    Option define SystemInfoBackground SystemInfoBackground; #Background color of ToolTips 
    
    set stdSize -12
    set smallSize -11
    set tinySize -9
    Option define MenuFont "helvetica $stdSize"
    Option define FixedFont "courier $stdSize"
    Option define TinyFixedFont "courier $tinySize"
    Option define SmallFont "helvetica $smallSize"
    Option define SmallBoldFont "helvetica $smallSize bold"
    Option define SmallItalicFont "helvetica $smallSize italic"
    Option define TinyFont "helvetica $tinySize"
    Option define StandardFont "helvetica $stdSize"
    Option define BoldFont "helvetica $stdSize bold"
    Option define ItalicFont "helvetica $stdSize italic"
    Option define TitleFont "helvetica $stdSize"
    Option define TitleLabelFont "helvetica $stdSize"
    Option define SystemHighlight SystemHighlight
    Option define SystemHighlightText SystemHighlightText
    Option define SystemButtonFace SystemButtonFace
    #
    Option add *Checkbutton.selectColor white widgetDefault
    Option add *.selectColor black widgetDefault
} else {
    # SGI, Linux, OSX Defaults
    set stdSize -12
    set smallSize -11
    set tinySize -9
    Option define MenuFont "helvetica $stdSize bold"
    Option define FixedFont "courier $stdSize"
    Option define TinyFixedFont "courier $tinySize"
    Option define SmallFont "helvetica $smallSize"
    Option define SmallBoldFont "helvetica $smallSize bold"
    Option define SmallItalicFont "helvetica $smallSize italic"
    Option define TinyFont "helvetica $tinySize"
    Option define StandardFont "helvetica $stdSize"
    Option define BoldFont "helvetica $stdSize bold"
    Option define ItalicFont "helvetica $stdSize italic"
    Option define TitleFont "helvetica -20"
    Option define TitleLabelFont "helvetica $stdSize italic"
    
    Option define SystemHighlight gray80
    Option define SystemHighlightText \#80c8ff
    Option define SystemButtonFace gray90
    Option define SystemScrollBars gray90; #Scrollbar color 
    Option define SystemDesktop darkblue; #Desktop color 
    Option define SystemActiveTitleBar white; #Color of the title bar for the active window 
    Option define SystemInactiveTitleBar gray; #Color of the title bar for the inactive window 
    Option define SystemMenuBar	gray90; #Menu background color 
    Option define SystemWindowBackground gray80; #Window background color 
    Option define SystemWindowFrame gray90; #Window frame color 
    Option define SystemMenuText gray90; #Color of text on menus 
    Option define SystemWindowText black; #Color of text in windows 
    Option define SystemTitleBarTex gray90; #Color of text in caption, size box, and scroll arrow 
    Option define SystemActiveBorder black; #Border color of active window 
    Option define SystemInactiveBorder gray80; #Border color of inactive window 
    Option define SystemApplicationWorkspace gray; #Background color of multiple document interface (MDI) applications 
    Option define SystemHighlight gray; #color of items selected in a control 
    Option define SystemHighlightText blue; #Text color of items selected in a control 
    Option define SystemHighlightBackground gray
    Option define SystemButtonFace gray90; #Color of shading on the face of command buttons 
    Option define SystemButtonShadow gray10; #Color of shading on the edge of command buttons 
    Option define SystemGrayText gray; #Grayed (disabled) text 
    Option define SystemButtonText black; #Text color on push buttons 
    Option define SystemInactiveCaptionText gray; #Color of text in an inactive caption 
    Option define System3DHighlight gray; #color for 3-D display elements 
    Option define System3DDKShadow black; #Darkest shadow color for 3-D display elements 
    Option define System3DLight white; #lightest 3-D color after vb3DHighlight 
    Option define SystemInfoText black; #of text in ToolTips 
    Option define SystemInfoBackground lightyellow; #Background color of ToolTips 

    #
    Option add *Checkbutton.selectColor yellow
    Option add *Menu.Font [Option lookup MenuFont]
    Option add *selectBackground \#80c8ff
}

# We define three keyboard modifiers
# AccelMeta is used for keyboard acceleration sequences (say Ctrl-C)
# AltMeta   is used for alternative keyboard bindings (say Alt-L)
# MouseMeta is used to trigger special mouse interaction (like Maya's
#           Alt-LeftButton-Drag behaviour)

if {$pf(platform) == "windows"} {
    Event define AccelMeta Control
    Event define AltMeta   Alt
    Event define MouseMeta Alt
} else {
    if {$pf(os) == "Darwin"} {
        # Darwin
        # Note: Inside X11, the Command key is bound as Meta, but when used in a
        # keyboard combination that is used by X11 per-se, it does not reach the
        # running programs (for example Command-C (copy) won't reach programs)
        # This requires that, to Cut-n-Paste from X11 to OSX, this is done:
        #  - Select the zone to copy
        #  - Command-V (this will paste from X11's selection clipboard 
        #               into the current OSX app)
        # whereas, to go in the other direction, this is required:
        #  - Command-C on a selection in an OSX app
        #  - Control-V in an X11 app (not Command), which will paste properly
        #
        # This means that for X11 programs it is necessary to go back to the
        # usual Control/Alt bindings a-la Unix (with particular caveats for the
        # Option key, which alters the letters pressed in combination with it)
        
        Event define AccelMeta Control
        # This is the Option key, bound to Option-ArrowKey sequences
        Event define AltMeta   Mod1
        # The Meta key makes the Left Button like a Right Button under X11,
        # so we have to use the Option key
        Event define MouseMeta Mod1
    } else {
        # On Unix accelerator sequences start with Ctrl
        Event define AccelMeta Control
        Event define AltMeta   Alt
        # On Unix mouse interaction starts with Alt
        Event define MouseMeta Alt
    }
}

# shared event bindings...
set accelmeta [Event lookup AccelMeta]
set altmeta   [Event lookup AltMeta]
set mousemeta [Event lookup MouseMeta]

# File menu
Event add New      <$accelmeta-n>
Event add Open     <$accelmeta-o>
Event add Import   <$accelmeta-i>
Event add Save     <$accelmeta-s>
Event add RaiseLog <$altmeta-l>
Event add Quit     <$accelmeta-q>

# Edit menu
Event add RedoCmd <Shift-$accelmeta-Z>
Event add UndoCmd <$accelmeta-z>
# Ctrl-C Ctrl-X Ctrl-V bindings
Event add Copy    <$accelmeta-c>
Event add Cut     <$accelmeta-x>
Event add Paste   <$accelmeta-v>

# Windows-style Copy-Cut-Paste bindings
#Event add Copy    <$accelmeta-Insert>
#Event add Cut     <$accelmeta-Delete>
#Event add Paste   <Shift-Insert>

Event add PasteSelection <ButtonRelease-2>

# Generic UI behaviour
Event add BalloonShow <Button-1>
Event add BalloonHide <ButtonRelease-1>
Event add Cancel      <Escape>
Event add Clear       <BackSpace>
Event add Clear       <Delete>
Event add CloseWindow <$accelmeta-w>
Event add Commit      <Return>
Event add Commit      <KP_Enter>
Event add Default     <Return>
Event add Default     <KP_Enter>
Event add Duplicate   <$accelmeta-d>
Event add Edit        <Double-1>
Event add EditAlt     <$accelmeta-Double-1>
Event add EditAlt2    <Shift-$accelmeta-Double-1>
Event add Expand      <Button-1>
Event add ExpandAlt   <$accelmeta-Button-1>
Event add Fit         <$accelmeta-f>
Event add Reset       <Home>
Event add PopUpMenu   <ButtonPress-3>
Event add Properties  <Button-3>
Event add Toggle      <space>
Event add ZoomIn      <z>
Event add ZoomOut     <Shift-Z>

# Keyboard network traversal
Event add PageUp    <Prior>
Event add PageDown  <Next>
Event add Up    <Up>
Event add Down  <Down>
Event add Left  <Left>
Event add Right <Right>
Event add Next     <$altmeta-Right>
Event add Parent   <$altmeta-Up>
Event add Previous <$altmeta-Left>
Event add KeyboardEntry <k>

# Mouse interaction
Event add DragBegin  <Button-2>
Event add DragMotion <B2-Motion>
Event add DragEnd    <ButtonRelease-2>
if {$pf(platform) == "windows"} {
  Event add ScrollWheel <MouseWheel>
}
Event add ScrollWheelUp   <Button-4>
Event add ScrollWheelDown <Button-5>


# Virtual sliders
Event add VSlideBegin     <$mousemeta-1>
Event add VSlideMotion    <$mousemeta-B1-Motion>
Event add VSlideBigMotion <Shift-$mousemeta-B1-Motion>
Event add VSlideEnd       <Any-ButtonRelease-1>
Event add VSlideUp	  <Up>
Event add VSlideUp	  <Button-4>
Event add VSlideDown	  <Down>
Event add VSlideDown	  <Button-5>
Event add VSlideOctaveUp	<$accelmeta-Up>
Event add VSlideOctaveDown	<$accelmeta-Down>

# Selection handling 
Event add SelectAll   <$accelmeta-a>
Event add Select      <ButtonPress-1>
Event add SelectToggle <$accelmeta-ButtonPress-1>
Event add SelectJoin  <Shift-ButtonPress-1>
Event add SelectJoinEnd  <Shift-ButtonRelease-1>
Event add SelectBegin <ButtonPress-1>
Event add SelectEnd   <ButtonRelease-1>
Event add SelectDrag  <B1-Motion>

# font usage
Option add *Label.font [Option lookup StandardFont]
Option add *OptionMenu.Font [Option lookup MenuFont]
Option add *Menu.Label.font [Option lookup MenuFont]
Option add *Button.font [Option lookup StandardFont]
Option add *Entry.font  [Option lookup StandardFont]
Option add *Text.font [Option lookup StandardFont]
Option add *Checkbutton.font [Option lookup StandardFont]
Option add *Radiobutton.font [Option lookup StandardFont]
Option add *Menubutton.font [Option lookup MenuFont]
Option add *Message.Font [Option lookup StandardFont]
Option add *Fixed*font [Option lookup FixedFont]
Option add *Filename*font [Option lookup SmallFont]
Option add *VSlider.*font [Option lookup SmallFont]
Option add *Slider.*font [Option lookup TinyFont]
Option add *TitleBar*Label.font [Option lookup MenuFont]
Option add *Listbox.font [Option lookup SmallFont]
Option add *ScrolledListbox.font [Option lookup SmallFont]
Option add *ScrolledListbox.background white

# menu
Option add *tearOff 0

# General
Option add *ColorEditor.sliderbackground gray90
Option add *ColorEditor.palettebackground gray25
Option add *Entry.background white
Option add *DDEntry.background white
Option add *VSlider.background white
Option add *BorderWidth 1
Option add *Menubutton.borderWidth 1
Option add *Dialog.borderWidth 0
Option add *Toplevel.borderWidth 0
Option add *selectBorderWidth 0
Option add *BalloonColor [Option lookup SystemInfoBackground]
Option add *BalloonFont [Option lookup SmallFont]
Option add *BalloonWidth 200
Option add *BalloonOffset 12

Option add *HighlightThickness 0
Option add *Button.highlightThickness 2
Option add *Entry.highlightThickness 2
Option add *VSlider.highlightThickness 2
Option add *Slider.highlightThickness 2
Option add *DDEntry.highlightThickness 2

Option add *Scale.width 8
Option add *VSlider.*width 6
Option add *Label.Anchor w
Option add *Radiobutton.borderWidth 1
Option add *ColorButton.*width 8
Option add *ColorButton.*height 1
Option add *TabFrame.tabonbg [Option lookup SystemButtonFace]
Option add *TabFrame.taboffbg [Option lookup SystemButtonFace]

# Scrolled Widgets
Option add *vscrollMode dynamic
Option add *hscrollMode dynamic

# Paned Windows
Option add *Panedwindow.thickness 2
Option add *Panedwindow.sashBorderWidth 1
Option add *Pane.Margin 5

# Text Widgets
Option add *Text.padX 5
Option add *Text.padY 2
Option add *Console.padX 5
Option add *Console.padY 2
Option add *Console.font [Option lookup FixedFont]
Option add *Console.background white

Option add *HistoryBackground #b0c0bd

# set WaitTime to 0 for button-press balloon help
# otherwise it is the time before the balloon appears
# measured in milliseconds.
Option add *WaitTime 1000



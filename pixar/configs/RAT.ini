#
#  The factory-default RAT.ini  $Revision: #1 $
#
#   controls RAT-general installation settings.
#
 
# Use this to specify additional directories to search for
# resources (like icons)
SetPref ResourceDirs {}

array set pf [GetPlatform]
if {$pf(platform) == "windows"} {
    set tmpdir [GetEnv TEMP c:/temp]
    #setting this to 0 will use the RAT custom file pickers
    #setting to 1 will use default Windows file pickers
    SetPref UseStdFilePicker 1
    SetPref TextEditor notepad
    SetPref NT_UNC 1
} else {
    if {$pf(os) == "Darwin"} {
	SetPref UseStdFilePicker 0
	set editor [GetEnv WINEDITOR "open -a TextEdit"]
        set tmpdir [GetEnv TMPDIR ~/.TemporaryItems]
    } else {
	set editor [GetEnv WINEDITOR nedit]
        set tmpdir [GetEnv TMPDIR /var/tmp]
    }
    SetPref TextEditor $editor
    SetPref NT_UNC 0; # set to 1 for heterogenous NT/Unix rendering.
}

SetPref TmpDir $tmpdir

## WSRoot - the default root directory for the workspace.
#   results in something like: ~user/RAT/slim1.0
set vers [GetVersion]
set vv [string range $vers 0 2]
SetPref WSRoot [file join [RATGetDir home] RAT [GetAppName]$vv]

# when picking files via the filepicker, should we strip
# pathnames against the current workspace's searchpaths?
SetPref PreferFullPaths 0

## Support for standard scripting
LoadExtension tcl [file join [RATGetDir RATetc] RATExpression.tcl]

# the default tcl proc to map an input frame to an 
#   external image or texture frame.
SetPref DefaultSequenceFunction fit

# the default client used by Slim
# this is relevant when Slim is used in standalone mode
# to override this, change the definition of this variable in a RAT.ini file
# setting it in a slim.ini file will be too late for some operations
namespace eval RAT {
    set DefaultSlimClient RenderMan_for_Maya
}

# default filetype patterns for file selection
SetPref FileExtension.All	    {"All Files" {*}}
SetPref FileExtension.Image	    {"Image Files" {*.tif* *.iff *.rgb *.pic *.tx *.tex *_t *.env *.dis *.hdr* *.exr}}
SetPref FileExtension.Texture	    {"Texture Files" {*.tx *.tex *_t *.env}}
SetPref FileExtension.PhotonMap     {"Photon Maps" {*.pho *.gpm *.cpm}}
SetPref FileExtension.PhotonMapCaustic {"Caustic Photon Maps" {*.cpm *.pho}}
SetPref FileExtension.PhotonMapGlobal {"Global Photon Maps" {*.gpm *.pho}}
SetPref FileExtension.ShadowMap     {"Shadow Files" {*.shd* *.tex *.zzz}}
SetPref FileExtension.IndirectMap   {"Indirect Cache Files" {*.icf}}
SetPref FileExtension.Slim	    {"Slim Files" {*.slim}}
SetPref FileExtension.AppMaster	    {"Appearance Masters" {*.slo *.vma}}
SetPref FileExtension.AppInstance   {"Appearance Instances" {*.slo *.vma *.slim *.via}}
SetPref FileExtension.AppDSO	    {"RIB Generators" {*.dll *.so}}
SetPref FileExtension.SlimPalette   {"Slim Palettes" {*.splt}}
SetPref FileExtension.SlimSession   {"Slim Sessions" {*.slss}}
SetPref FileExtension.Source	    {"Source Files" {*.tcl *.h *.c++ *.cpp *.c *.pl *.sl *.slim}}
SetPref FileExtension.SlimPaletteBk {"Slim Palette Backups" {*.bk*}}
SetPref FileExtension.OcclusionTex {"Occlusion Textures"  {*.tex}}
SetPref FileExtension.OcclusionOcf {"Occlusion Caches" {*.ptc}}
SetPref FileExtension.OcclusionBkm {"Occlusion Caches" {*.bkm}}
SetPref FileExtension.BakePtc {"Baked Point Clouds" {*.ptc}}
SetPref FileExtension.BakeBkm {"Baked Brickmaps" {*.bkm}}
SetPref FileExtension.BakeTex {"Baked Images" {*.tex}}
SetPref FileExtension.Ptex {"Ptex Files" {*.ptex *.ptx}}

## Default searchpaths.
# the @ represents the renderman defaults for
#   /standardshaderpath, /standardtexturepath, 
#   /standardvfxmasterpath, /standardvfxinstancepath
# and are established in $RMANTREE/etc/rendermn.ini.
set ratlib \$RATTREE/lib
set ratshaders \$RATTREE/lib/shaders
set rmanlib \$RMANTREE/lib
set rmanshaders \$RMANTREE/lib/shaders
SetPref WSSearchPaths [list \$WSRoot $ratshaders $ratlib $rmanshaders $rmanlib . @]
SetPref WSServerSearchPaths "\$WSRoot . @"

# Searchpaths can be specified by resource type to avoid unnecessarily
# broad searches.  The following searchpaths will be editable in the 
# workspace editor.  If the searchpath for a resource type is empty the 
# default local or server searchpath will be used instead.  
# If the searchpath for a resource type is not empty it entirely 
# replaces the default local or server searchpath.
SetPref WSSearchPaths.archive {}
SetPref WSSearchPaths.palette {}
SetPref WSSearchPaths.procedural {}
SetPref WSSearchPaths.shader {}
SetPref WSSearchPaths.texture {}
SetPref WSServerSearchPaths.serverarchive {}
SetPref WSServerSearchPaths.servershader {}
SetPref WSServerSearchPaths.servertexture {}

# Uncomment any of these to make them editable in the workspace editor
#SetPref WSSearchPaths.display {}
#SetPref WSSearchPaths.vfxmaster {}
#SetPref WSSearchPaths.vfxinstance {}
#SetPref WSServerSearchPaths.servervfxmaster {}
#SetPref WSServerSearchPaths.servervfxinstance {}
#SetPref WSServerSearchPaths.serverdisplay {}

SetPref WSDirMaps {}
# Directory mappings must each be associated with a zone.
# The WSDirmapZoneList pref sets the list of possible zones
# to choose from (the list becomes available as an option menu
# when a dirmap is added in the Workspace Editor).
# The default zones (NFS and UNC) are network file systems.  
# Generally, all unices will be NFS, while NT would be UNC.
# File systems are just one possible zoning scheme...
SetPref WSDirmapZoneList {NFS UNC}

# The WSDirmapZone pref indicates which zone we are currently in.
# Dirmaps associated with this same zone will be applied.
if {$pf(platform) == "windows"} {
	SetPref WSDirmapZone UNC
} else {
	SetPref WSDirmapZone NFS
}

# default name for workspace files.
# this setting may be overridden inside workspace.prefs
SetPref WSFileName RATworkspace.ws

SetPrefsSerialNumber 0

# The LicenseServer pref is no longer set by default.  Instead
# we defer to the pixar.license file located "north" of this RMSTREE root
# or provided by the environment variable PIXAR_LICENSE_FILE.

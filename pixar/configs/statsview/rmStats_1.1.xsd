<?xml version="1.0"?>
<!--
# Copyright (c) 1986-2016 Pixar. All rights reserved.
#
# The information in this file (the "Software") is provided for the exclusive
# use of the software licensees of Pixar ("Licensees").  Licensees have the
# right to incorporate the Software into other products for use by other
# authorized software licensees of Pixar, without fee. Except as expressly
# permitted herein, the Software may not be disclosed to third parties, copied
# or duplicated in any form, in whole or in part, without the prior written
# permission of Pixar.
#
# The copyright notices in the Software and this entire statement, including the
# above license grant, this restriction and the following disclaimer, must be
# included in all copies of the Software, in whole or in part, and all permitted
# derivative works of the Software, unless such copies or derivative works are
# solely in the form of machine-executable object code generated by a source
# language processor.
#
# PIXAR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL PIXAR BE
# LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  IN NO CASE WILL
# PIXAR'S TOTAL LIABILITY FOR ALL DAMAGES ARISING OUT OF OR IN CONNECTION WITH
# THE USE OR PERFORMANCE OF THIS SOFTWARE EXCEED $50.
#
# Pixar
# 1200 Park Ave
# Emeryville CA 94608

$ Revision: $
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://renderman.pixar.com"
  targetNamespace="http://renderman.pixar.com">

  <!-- A <statsDoc> is a sequence of <stats> elements.  -->
  <xsd:element name="statsDoc">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
	<xsd:element name="stats" type="StatsType"/>
      </xsd:choice>
      <xsd:attributeGroup ref="StatInfo"/>
      <xsd:attribute name="base" type="xsd:string"/> <!-- should be URL -->
    </xsd:complexType>
  </xsd:element>

  <!-- <stats> is an arbitrary sequence of stats, possibly nested.  It has a
       name attribute an an optional description (and so does each stat). 
       It also has an optional kind attribute, which can be used as a
       formatting hint. -->
  <xsd:complexType name="StatsType">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
	<xsd:group ref="StatsGroup"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
    <xsd:attribute name="kind" type="StatsKind" use="optional"/>
  </xsd:complexType>

  <!-- A stat can be any of the following (including nested <stats> lists). -->
  <xsd:group name="StatsGroup">
    <xsd:choice>
      <xsd:element name="int"       type="IntStat"/>
      <xsd:element name="float"     type="FloatStat"/>
      <xsd:element name="string"    type="StringStat"/>
      <xsd:element name="timer"     type="TimerStat"/>
      <xsd:element name="range"     type="RangeStat"/>
      <xsd:element name="memory"    type="MemoryStat"/>
      <xsd:element name="set"       type="SetStat"/>
      <xsd:element name="histogram" type="HistogramStat"/>
      <xsd:element name="stats"     type="StatsType"/>
    </xsd:choice>
  </xsd:group>

  <!-- Each stat has a name and an optional description.  (The description
       might be empty even if it's present.) -->
  <xsd:attributeGroup name="StatInfo">
    <xsd:attribute name="name" type="xsd:string"/>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
  </xsd:attributeGroup>

  <!-- The kind attribute of a stats list provides additional info about
       the structure of the list and can be used as a formatting hint. -->
  <xsd:simpleType name="StatsKind">
    <xsd:restriction base="xsd:token">
      <!-- Per-frame statistics list. -->
      <xsd:enumeration value="frame"/>
      <!-- Separate section of stats (formatting hint). -->
      <xsd:enumeration value="section"/>
      <!-- A list of timer stats, including nested timer lists. -->
      <xsd:enumeration value="timers"/>
      <!-- A list of memory stats, including nested memory lists. -->
      <xsd:enumeration value="memstats"/>
      <!-- A list of shader stats, each of which is a <stat> list. -->
      <xsd:enumeration value="shaders"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:complexType name="IntStat">
    <xsd:simpleContent>
      <xsd:extension base="xsd:long">
	<xsd:attributeGroup ref="StatInfo"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="FloatStat">
    <xsd:simpleContent>
      <xsd:extension base="xsd:double">
	<xsd:attributeGroup ref="StatInfo"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="StringStat">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
	<xsd:attributeGroup ref="StatInfo"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="TimerStat">
    <xsd:sequence>
      <xsd:element name="elapsed" type="xsd:double"/>
      <xsd:element name="user" type="xsd:double" minOccurs="0"/>
      <xsd:element name="system" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
  </xsd:complexType>

  <xsd:complexType name="RangeStat">
    <xsd:sequence>
      <xsd:element name="current" type="xsd:double"/>
      <xsd:element name="total" type="xsd:double"/>
      <xsd:element name="min" type="xsd:double"/>
      <xsd:element name="max" type="xsd:double"/>
      <xsd:element name="average" type="xsd:double"/>
      <xsd:element name="count" type="xsd:double"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
  </xsd:complexType>

  <xsd:complexType name="MemoryStat">
    <xsd:sequence>
      <xsd:element name="peak" type="xsd:long"/> <!-- in bytes -->
      <xsd:element name="current" type="xsd:long"/> <!-- in bytes -->
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
  </xsd:complexType>

  <xsd:complexType name="SetStat">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
	<xsd:element name="member" type="xsd:string"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
  </xsd:complexType>

  <xsd:complexType name="HistogramStat">
    <xsd:sequence>
      <!-- Each bin looks like <bin [label="X"]> Y </bin> -->	
      <xsd:element name="bin" maxOccurs="unbounded">
	<xsd:complexType>
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:long">
	      <xsd:attribute name="label" use="optional"/>
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attributeGroup ref="StatInfo"/>
  </xsd:complexType>

</xsd:schema>
